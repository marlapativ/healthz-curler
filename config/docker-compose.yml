name: healthz-curler

services:
  influxdb:
    image: influxdb:latest
    hostname: influxdb
    networks:
      - private
    environment:
      DOCKER_INFLUXDB_INIT_MODE: setup
      DOCKER_INFLUXDB_INIT_USERNAME: admin
      DOCKER_INFLUXDB_INIT_PASSWORD: AOrS18_q0hoBJ
      DOCKER_INFLUXDB_INIT_ORG: healthz-curler
      DOCKER_INFLUXDB_INIT_BUCKET: healthz-curler
      DOCKER_INFLUXDB_INIT_RETENTION: 30d
      DOCKER_INFLUXDB_INIT_ADMIN_TOKEN: AOrS18_q0hoBJ
    healthcheck:
      test: influx ping || exit 1
      interval: 60s
      timeout: 10s
      retries: 5
      start_period: 5s

  redis:
    image: redis:7.2.4
    hostname: redis
    networks:
      - private
    healthcheck:
      test: ['CMD-SHELL', 'redis-cli ping | grep PONG']
      interval: 60s
      timeout: 10s
      retries: 5
      start_period: 5s

  caddy:
    build:
      context: ../gateway
      dockerfile: Dockerfile
    hostname: caddy
    networks:
      - private
    ports:
      - '80:80'
      - '443:443'
    environment:
      DOMAIN: localhost
      SERVER_BUN: bun:4205
      WS_SOCKETIO_BUN: bun:4206
      SERVER_NODE: node:4215
      WS_SOCKETIO_NODE: node:4216
      SERVER_GO: go:4225
      UI_SERVER: ui:4200
    volumes:
      - ../gateway/caddy/Caddyfile:/etc/caddy/Caddyfile

  node:
    build:
      context: ../
      dockerfile: node/Dockerfile
    hostname: node
    networks:
      - private
    environment:
      INFLUX_TOKEN: AOrS18_q0hoBJ
      INFLUX_URL: http://influxdb:8086
    depends_on:
      influxdb:
        condition: service_healthy
      redis:
        condition: service_healthy

  bun:
    build:
      context: ../
      dockerfile: bun/Dockerfile
    hostname: bun
    networks:
      - private
    environment:
      INFLUX_TOKEN: AOrS18_q0hoBJ
      INFLUX_URL: http://influxdb:8086
    depends_on:
      influxdb:
        condition: service_healthy
      redis:
        condition: service_healthy

  go:
    build:
      context: ../go
      dockerfile: Dockerfile
    hostname: go
    networks:
      - private
    environment:
      INFLUX_TOKEN: AOrS18_q0hoBJ
      INFLUX_URL: http://influxdb:8086
    depends_on:
      influxdb:
        condition: service_healthy
      redis:
        condition: service_healthy

  ui:
    build:
      context: ../ui
      dockerfile: Dockerfile
    hostname: ui
    networks:
      - private

networks:
  private:
    driver: bridge
